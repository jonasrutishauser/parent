name: Maven CI

inputs:
  java-version:
    desription: "Java version"
    required: true
    default: 11
  use-cache:
    description: "Should a maven artifacts cached be used"
    required: true
    default: true
  coverage:
    description: "Should a codecov.io coverage report be made"
    required: true
    default: true
  sonar:
    description: "Should a sonar report be made"
    required: true
    default: true
  sonar-organization:
    description: "Sonar organization"
    required: true
    default: jonasrutishauser-github
  sonar-token:
    description: "Sonar access token"
    required: true
    default: undefined
  site:
    description: "Should the site be deployed"
    required: true
    default: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ inputs.java-version }}
      - name: Setup Git
        run: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts && git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"
      - name: Cache Maven packages
        if: ${{ inputs.use-cache == 'true' }}
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ inputs.java-version }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ inputs.java-version }} ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B -V -e install
      - name: Unittest Coverage
        if: ${{ inputs.coverage == 'true' }}
        run: mvn -B jacoco:report && bash <(curl -s https://codecov.io/bash) -c -F unittests
      - name: Integrationstest Coverage
        if: ${{ inputs.coverage == 'true' }}
        run: mvn -B jacoco:report-integration && bash <(curl -s https://codecov.io/bash) -c -F integration
      - name: Sonar Report
        if: ${{ inputs.sonar == 'true' }}
        run: git fetch --unshallow && mvn -B -e jacoco:report jacoco:report-integration sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=${{ inputs.sonar-organization }} -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ inputs.sonar-token }}
      - name: Deploy Site
        if: ${{ inputs.site == 'true' }}
        run: mvn -B -e site-deploy
        env:
          GITHUB_TOKEN: ${{ github.token }}
